services:
    krt.gestaolimites:
        image: ${DOCKER_REGISTRY-}krtgestaolimites
        build:
            context: .
            dockerfile: KRT.GestaoLimites/Dockerfile
        environment:
            WAIT_HOSTS: postgres:5432
            WAIT_BEFORE: 10
            ASPNETCORE_HTTPS_PORTS: ${ASPNETCORE_HTTPS_PORTS}
            ASPNETCORE_HTTP_PORTS: ${ASPNETCORE_HTTP_PORTS}
            ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
            ASPNETCORE_Kestrel__Certificates__Default__Password: ${ASPNETCORE_KESTREL_PASSWORD}
            ASPNETCORE_Kestrel__Certificates__Default__Path: ${ASPNETCORE_KESTREL_PATH}
            ASPNETCORE_URLS: ${ASPNETCORE_URLS}
        ports:
            - 80:80
            - 443:443
        volumes:
            - ./certificates:/https:ro
        networks:
            - krt-network
    postgress:
        image: postgres:alpine
        restart: always
        container_name: postgres
        environment:
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_DB: ${POSTGRES_DB}
        ports:
            - 5432:5432
        volumes:
            - bd-data:/var/lib/postgresql/data
        networks:
            - krt-network
    adminer:
        image: adminer
        restart: always
        container_name: adminer
        ports:
          - 8080:8080
        networks:
          - krt-network
networks:
    krt-network:
        driver: bridge
volumes:
    bd-data:

